@ARTICLE{kak,
      title={Cartan Decomposition of $SU(2^n)$, Constructive Controllability of Spin systems and Universal Quantum Computing}, 
      author={Navin Khaneja and Steffen Glaser},
      year={2000},
      eprint={quant-ph/0010100},
      archivePrefix={arXiv},
      primaryClass={quant-ph}
}

@article{two,
	title = {Optimal Quantum Circuits for General Two-Qubit Gates},
	volume = {69},
	issn = {1050-2947, 1094-1622},
	url = {http://arxiv.org/abs/quant-ph/0308006},
	doi = {10.1103/PhysRevA.69.032315},
	abstract = {In order to demonstrate non-trivial quantum computations experimentally, such as the synthesis of arbitrary entangled states, it will be useful to understand how to decompose a desired quantum computation into the shortest possible sequence of one-qubit and two-qubit gates. We contribute to this effort by providing a method to construct an optimal quantum circuit for a general two-qubit gate that requires at most 3 {CNOT} gates and 15 elementary one-qubit gates. Moreover, if the desired two-qubit gate corresponds to a purely real unitary transformation, we provide a construction that requires at most 2 {CNOTs} and 12 one-qubit gates. We then prove that these constructions are optimal with respect to the family of {CNOT}, y-rotation, z-rotation, and phase gates.},
	pages = {032315},
	number = {3},
	journaltitle = {Phys. Rev. A},
	author = {Vatan, Farrokh and Williams, Colin},
	urldate = {2023-04-07},
	date = {2004-03-22},
	eprinttype = {arxiv},
	eprint = {quant-ph/0308006},
	keywords = {Quantum Physics},
	file = {arXiv Fulltext PDF:C\:\\Users\\Bygdc\\Zotero\\storage\\3BIECEGX\\Vatan 和 Williams - 2004 - Optimal Quantum Circuits for General Two-Qubit Gat.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Bygdc\\Zotero\\storage\\H626MI3J\\0308006.html:text/html},
}

@article{QFAST,
	title = {{QFAST}: {Conflating} {Search} and {Numerical} {Optimization} for {Scalable} {Quantum} {Circuit} {Synthesis}},
	shorttitle = {{QFAST}},
	url = {http://arxiv.org/abs/2103.07093},
	abstract = {We present a quantum synthesis algorithm designed to produce short circuits and to scale well in practice. The main contribution is a novel representation of circuits able to encode placement and topology using generic "gates", which allows the QFAST algorithm to replace expensive searches over circuit structures with few steps of numerical optimization. When compared against optimal depth, search based state-of-the-art techniques, QFAST produces comparable results: 1.19x longer circuits up to four qubits, with an increase in compilation speed of 3.6x. In addition, QFAST scales up to seven qubits. When compared with the state-of-the-art "rule" based decomposition techniques in Qiskit, QFAST produces circuits shorter by up to two orders of magnitude (331x), albeit 5.6x slower. We also demonstrate the composability with other techniques and the tunability of our formulation in terms of circuit depth and running time.},
	urldate = {2023-02-22},
	publisher = {arXiv},
	author = {Younis, Ed and Sen, Koushik and Yelick, Katherine and Iancu, Costin},
	month = mar,
	year = {2021},
	note = {arXiv:2103.07093 [quant-ph]},
	keywords = {Quantum Physics},
	annote = {注释(2023/4/6 下午5:03:03)
“a bottom-up approach” (Younis 等, 2021, p. 1)“top-down approaches” (Younis 等, 2021, p. 1)“The search algorithm determines the number of partial solutions evaluated: any strategy to reduce these will improve scalability.” (Younis 等, 2021, p. 1)“these bottom-up techniques slow down the closer they get to a solution. Furthermore, topology awareness greatly reduces the final solution depth” (Younis 等, 2021, p. 1)“trading-off search computational complexity with numerical optimization complexity.” (Younis 等, 2021, p. 1)“Most search based techniques [18] use simple 2-qubit parameterized blocks that contain two U 3 gates and a two-qubit gate, usually CN OT 2. In contrast, QFAST can use arbitrary generic gates applied to any arbitrary set of qubits.” (Younis 等, 2021, p. 1)“First, we can plug in any native synthesis tool, at any qubit concurrency, based on its perceived quality of solution or execution speed.” (Younis 等, 2021, p. 2)“The quality of a synthesis algorithm is evaluated by the number of gates in the circuit it produces and by the distinguishability of the solution from the original unitary.” (Younis 等, 2021, p. 2)“more recent efforts [18], [29], [30] use the Hilbert-Schmidt inner product between the conjugate transpose of UT and UC” (Younis 等, 2021, p. 2)“KAK-decomposition” (Younis 等, 2021, p. 2)“at best this is linear in depth, at worst it is exponential.” (Younis 等, 2021, p. 3)“presence of too many deep backtracking chains” (Younis 等, 2021, p. 3)“circuit paramaterization grows linearly with depth.” (Younis 等, 2021, p. 3)“Optimal search based techniques are limited in scalability first by the search algorithm, second by the scalability of numerical optimization.” (Younis 等, 2021, p. 3)“The function encodes the operation (quantum transformation) performed on an associated number of qubits. When operating with a gate whose function is parameterized, we refer to it as a variable function gate. Whenever gate parameterization is numerically instantiated, the gate becomes fixed function.” (Younis 等, 2021, p. 4)“The QFAST algorithm uses two parameterizations: variable function with fixed location gates, and variable function with variable location gates.” (Younis 等, 2021, p. 4)“U (2n) = \{ei({\textasciitilde} α· {\textasciitilde} σ⊗n) {\textbar} {\textasciitilde} α ∈ R4n \}” (Younis 等, 2021, p. 4)“This unitary-valued function is smooth and infinitelydifferentiable” (Younis 等, 2021, p. 4) An infinitely differentiable function is a function that has derivatives of all orders at every point in its domain. This means that the function is not just smooth, but its smoothness can be extended infinitely.They have more accurate approximations: Smooth functions can be approximated very accurately by polynomials, which makes them useful in numerical analysis and scientific computing.if function is a polynomial, then it is always smooth and infinitely differentiable.“Pad ́ e approximation method” (Younis 等, 2021, p. 4)“if we are given a 2-qubit location Q = (0, 1) on a 3-qubit circuit, then πQ(XX) = XXI. If instead, Q = (0, 2), then πQ(XX) = XIX.” (Younis 等, 2021, p. 4)“we compare directly against QSearch [17] which is the only published optimal and topology-aware technique.” (Younis 等, 2021, p. 11)“Topology awareness is important for synthesis algorithms, with opposing trends.” (Younis 等, 2021, p. 11)“For example, [5] proposed a divideand-conquer algorithm called Meet-in-the-Middle (MIM). Designed for exact circuit synthesis, the algorithm may also be used to construct an -approximate circuit. The results seem to indicate that the algorithm failed to synthesize a three qubit QFT circuit.” (Younis 等, 2021, p. 11)“We classify our approach as approximate since we accept solutions at a small distance from the original unitary.” (Younis 等, 2021, p. 11)“The main contribution is a circuit encoding that allows replacing expansive search over large circuit spaces with a single step of numerical optimization in a topology aware manner.” (Younis 等, 2021, p. 11)
},
	file = {arXiv Fulltext PDF:C\:\\Users\\Bygdc\\Zotero\\storage\\HGL366XI\\Younis 等 - 2021 - QFAST Conflating Search and Numerical Optimizatio.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Bygdc\\Zotero\\storage\\RM8EEEX6\\2103.html:text/html},
}
@article{three,
	title = {Realization of a {General} {Three}-{Qubit} {Quantum} {Gate}},
	url = {http://arxiv.org/abs/quant-ph/0401178},
	abstract = {We prove that a generic three-qubit quantum logic gate can be implemented using at most 98 one-qubit rotations about the \$y\$- and \$z\$-axes and 40 CNOT gates, beating an earlier bound of 64 CNOT gates.},
	urldate = {2023-02-22},
	publisher = {arXiv},
	author = {Vatan, Farrokh and Williams, Colin P.},
	month = jan,
	year = {2004},
	note = {arXiv:quant-ph/0401178},
	keywords = {Quantum Physics},
	file = {arXiv Fulltext PDF:C\:\\Users\\Bygdc\\Zotero\\storage\\QFK42KHD\\Vatan 和 Williams - 2004 - Realization of a General Three-Qubit Quantum Gate.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Bygdc\\Zotero\\storage\\FBYPMXVC\\0401178.html:text/html},
}